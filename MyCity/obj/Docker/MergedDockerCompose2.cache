name: dockercompose4389267118253165614
services:
  mycity.db:
    container_name: mycity.db
    environment:
      POSTGRES_DB: mycity
      POSTGRES_PASSWORD: mycity
      POSTGRES_USER: mycity
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U mycity
      timeout: 5s
      interval: 10s
      retries: 5
      start_period: 10s
    image: postgres:16-alpine
    networks:
      default: null
    ports:
      - mode: ingress
        host_ip: 127.0.0.1
        target: 5432
        published: "5432"
        protocol: tcp
    restart: unless-stopped
    volumes:
      - type: bind
        source: D:\Lessons\ASP Net\Projets\Dev\MyCity\volumes\postgres\db
        target: /var/lib/postgresql/data
        bind:
          create_host_path: true
  mycity.webhost:
    build:
      context: D:\Lessons\ASP Net\Projets\Dev\MyCity
      dockerfile: MyCity.WebHost/Dockerfile
      args:
        BUILD_CONFIGURATION: Debug
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: MyCity.WebHost
      target: base
    container_name: mycity.webhost
    depends_on:
      mycity.db:
        condition: service_healthy
        required: true
    entrypoint:
      - tail
      - -f
      - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      ConnectionStrings:MyCityDb: Host=mycity.db;Database=mycity;Username=mycity;Password=mycity
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: ""
    image: mycitywebhost:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /.nuget/packages  "/app/bin/Debug/net8.0/MyCity.WebHost.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
      - mode: ingress
        host_ip: 127.0.0.1
        target: 8080
        published: "8080"
        protocol: tcp
      - mode: ingress
        target: 8080
        protocol: tcp
    tty: true
    volumes:
      - type: bind
        source: D:\Lessons\ASP Net\Projets\Dev\MyCity\MyCity.WebHost
        target: /app
        bind:
          create_host_path: true
      - type: bind
        source: D:\Lessons\ASP Net\Projets\Dev\MyCity
        target: /src
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Пользователь\vsdbg\vs2017u5
        target: /remote_debugger
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Пользователь\.nuget\packages\
        target: /.nuget/packages
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Пользователь\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Пользователь\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Пользователь\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Пользователь\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\TokenService.Proxy\linux-x64\net6.0
        target: /TokenService.Proxy
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\HotReloadProxy\linux-x64\net6.0
        target: /HotReloadProxy
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\HotReload
        target: /HotReloadAgent
        read_only: true
        bind:
          create_host_path: true
networks:
  default:
    name: dockercompose4389267118253165614_default